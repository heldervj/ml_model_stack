version: '3.3'

services:
    db:
        restart: always
        build: ./backend-store
        image: backend_store
        container_name: mlflow_db
        environment:
            MYSQL_ROOT_PASSWORD: "senha123"
            MYSQL_DATABASE: "mlflow"
        expose:
            - "3306"
        ports:
            - "3306:3306"
        networks:
            - backend

    minio:
        restart: always
        build: ./artifact-store
        image: artifact_store
        container_name: minio_bucket
        environment:
            MINIO_ACCESS_KEY: "minioadmin"
            MINIO_SECRET_KEY: "minioadmin"
        expose:
            - "9000"
        ports:
            - "9000:9000"
        command: server /data
        networks:
            - frontend
            - backend

    web:
        restart: always
        build: ./mlflow-server
        image: mlflow_server
        container_name: mlflow_server
        depends_on: 
            - minio
            - db
        expose:
            - "5000"
        environment:
            MLFLOW__BACKEND_STORE_URI: "mysql+pymysql://root:senha123@db:3306/mlflow"
            MLFLOW_S3_ENDPOINT_URL: "http://minio:9000"
            AWS_ACCESS_KEY_ID: "minioadmin"
            AWS_SECRET_ACCESS_KEY: "minioadmin"
        networks:
            - frontend
            - backend

    nginx:
        restart: always
        build: ./nginx
        image: mlflow_nginx
        container_name: mlflow_nginx
        depends_on:
            - web
        ports:
            - "80:80"
        networks:
            - frontend

    training:
        restart: always
        build: ./training
        image: training
        container_name: training
        environment:
            AWS_ACCESS_KEY_ID: "minioadmin"
            AWS_SECRET_ACCESS_KEY: "minioadmin"
            MLFLOW_S3_ENDPOINT_URL: "http://minio:9000"
            MLFLOW_URI: "http://web:5000"
        volumes:
            - ./training/files:/home/jupyter
        expose:
            - "8080"
        ports:
            - "8080:8080"
        networks:
            - frontend

    api:
        restart: always
        build: ./api
        image: api
        container_name: api
        environment:
            AWS_ACCESS_KEY_ID: "minioadmin"
            AWS_SECRET_ACCESS_KEY: "minioadmin"
            MLFLOW_S3_ENDPOINT_URL: "http://minio:9000"
            MLFLOW_URI: "http://web:5000"
        expose:
            - "5005"
        ports:
            - "5005:5005"
        networks:
            - frontend
            - backend

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    dbdata: